
<tr>
  <td>
    {{#if true}} <!-- state.outcome.isDefined && (state.outcome.get.winner equals player) -->
      hand description
      <!-- state.outcome.get.hand.map(_.description).getOrElse("no hand") -->
    {{else if false}} <!-- state.player equals player -->
      ${{state.currentBet}} bet to
    {{/if}}
  </td>
  <td>{{player.description}}</td>
  <td><table><tr>
    <!-- state.hands.get(player).map(hand => hand.map(card => -->
    <!-- visible = state.player == player || (state.outcome.isDefined && state.stillIn.size gt 1) -->
    <td>showCard(card, visible)</td>
    <!--  )).getOrElse("-") -->
  </tr></table></td>
  <td>
    {{#if true }} <!-- state.stillIn.contains(player) -->
      $42
      <!-- state.inFors.get(player).map(i => "$" + i).getOrElse("") -->
    {{else}}
      "out"
    {{/if}}
  </td>
  <td>$42</td> <!-- state.piles.get(player).map(_.toString).getOrElse("--") -->
  <td>
    {{#if true}} <!-- state.player equals player -->
    <form> <!-- move(game.id) -->
      <select name="which" size=3>
        <option value="call">Call</option>
        <option value="fold">Fold</option>
        <option value="raise">Raise</option>
      </select>
      <select name="amount">
        <!-- n = state.piles state.player - state.currentBet -->
        <!-- i gets 1 to n -->
        <option value=1>1</option>
      </select>
      <input type="submit" value="submit" />
    </form>
    {{/if}}
  </td>
</tr>
